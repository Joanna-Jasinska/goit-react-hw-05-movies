{"version":3,"file":"static/js/344.a84740a9.chunk.js","mappings":"uKACA,MAA0B,yB,SCCbA,EAAU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GACxC,OAAOF,GAASC,GACd,qBACEE,UAAWC,EACXF,GAAIA,GAAE,mBAAoBF,EAAQ,IAAIK,WAAW,IAAK,IAAIC,aAF5D,UAIGN,GAAQ,wBAAKA,IAAc,GAC3BC,GAAoB,MAIvB,EAEH,C,8KCdD,EAA8B,iC,uCCMjBM,EAAc,WACzB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gHAEUC,EAAAA,EAAAA,IAAkBP,GAF5B,gBAERQ,EAFQ,EAERA,QACRJ,EAAQI,GAHQ,gDAKhBC,QAAQC,IAAR,MALgB,yDAAH,qDAQjBJ,GACD,GAAE,CAACN,KAGF,iBAAKN,GAAG,UAAR,WACE,mBACA,SAACiB,EAAA,EAAD,IACCR,EAAKS,OAAS,GACb,eAAIjB,UAAWC,EAAf,SACGO,EAAKU,KAAI,SAAAC,GAAG,OACX,2BACE,SAACvB,EAAA,EAAD,CACEC,OAAO,2CAAWsB,EAAIC,UACtBtB,SAAS,8BAAGqB,EAAIrB,aAElB,SAACkB,EAAA,EAAD,OALOK,EAAAA,EAAAA,MADE,OAWf,mDAEE,SAACL,EAAA,EAAD,SAKT,EACD,G,uDC/CA,MAA6B,8BAA7B,EAAsE,4BAAtE,EAA6G,4BAA7G,EAAkJ,0B,SCCrIA,EAAY,SAAC,GAA4C,IAAD,IAAzCM,SAAAA,OAAyC,aAAvBC,SAAAA,OAAuB,SACnE,OACE,gCACGD,GAAYC,EAAW,IAAK,gBAAKvB,UAAWC,KAC7C,gBACED,UAAS,UAAKsB,EAAWrB,EAAeA,EAA/B,YACPsB,EAAW,GAAKtB,OAKzB,C,mMCRKuB,EAAS,IAAIC,gBAAgB,CAEjCC,QAJc,mCAKdC,KAAM,EACNC,eAAe,EACfC,SAAU,UAEZC,EAAAA,EAAAA,SAAAA,OAAwBN,EACxB,IAAMO,EAAWD,EAAAA,EAAAA,OAAa,CAAEE,QAXhB,+BAWyBR,OAAAA,IAG5BS,EAAa,mCAAG,sGACJF,EAASG,IAAT,sBADI,uBACnBC,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,qDAMbC,EAAgB,mCAAG,WAAMC,GAAN,yFACPN,EAASG,IAAT,6BAAmCG,IAD5B,uBACtBF,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAMhBG,EAAc,mCAAG,WAAMjC,GAAN,yFACL0B,EAASG,IAAT,gBAAsB7B,IADjB,uBACpB8B,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAMdI,EAAc,mCAAG,WAAMlC,GAAN,yFACL0B,EAASG,IAAT,gBAAsB7B,EAAtB,aADK,uBACpB8B,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdvB,EAAiB,mCAAG,WAAMP,GAAN,yFACR0B,EAASG,IAAT,gBAAsB7B,EAAtB,cADQ,uBACvB8B,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD,wDCtCvB,IAkBId,EAAS,eAACmB,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAAC7C,EAAI8C,GAWvD,OARE9C,IAFF8C,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Article/Article.module.css?19e9","components/Article/Article.jsx","webpack://goit-react-hw-05-movies/./src/components/ArticleList/ArticleList.module.css?0fa8","components/ArticleList/ArticleList.jsx","webpack://goit-react-hw-05-movies/./src/components/Separator/Separator.module.css?d594","components/Separator/Separator.jsx","services/api.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"article\":\"Article_article__rqSqJ\"};","import css from './Article.module.css';\nimport { PropTypes } from 'prop-types';\nexport const Article = ({ title, content, id }) => {\n  return title || content ? (\n    <article\n      className={css.article}\n      id={id ? id : `Article:${(title + '').replaceAll(' ', '').toLowerCase}`}\n    >\n      {title ? <h4>{title}</h4> : ''}\n      {content ? content : ''}\n      {/* <div className={css.content}></div> */}\n    </article>\n  ) : (\n    ''\n  );\n};\nArticle.propTypes = {\n  title: PropTypes.object,\n  content: PropTypes.object,\n  id: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ArticleList\":\"ArticleList_ArticleList__VP6gr\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport css from './ArticleList.module.css';\nimport { Article } from 'components/Article/Article';\nimport { fetchMovieReviews } from 'services/api';\nimport { Separator } from 'components/Separator/Separator';\nexport const ArticleList = () => {\n  const { movieId } = useParams();\n  const [list, setList] = useState([]);\n\n  useEffect(() => {\n    const getArticles = async () => {\n      try {\n        const { results } = await fetchMovieReviews(movieId);\n        setList(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getArticles();\n  }, [movieId]);\n\n  return (\n    <div id=\"reviews\">\n      <br />\n      <Separator />\n      {list.length > 0 ? (\n        <ul className={css.ArticleList}>\n          {list.map(art => (\n            <li key={nanoid()}>\n              <Article\n                title={<>Author: {art.author}</>}\n                content={<>{art.content}</>}\n              />\n              <Separator />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <>\n          No reviews yet.\n          <Separator />\n        </>\n      )}\n    </div>\n  );\n};\nexport default ArticleList;\n","// extracted by mini-css-extract-plugin\nexport default {\"horizontal\":\"Separator_horizontal__DeiXg\",\"vertical\":\"Separator_vertical__Y5adW\",\"absolute\":\"Separator_absolute__o5u+-\",\"margin\":\"Separator_margin__SSK-C\"};","import { PropTypes } from 'prop-types';\nimport css from './Separator.module.css';\nexport const Separator = ({ vertical = false, relative = false }) => {\n  return (\n    <>\n      {vertical || relative ? '' : <div className={css.margin} />}\n      <div\n        className={`${vertical ? css.vertical : css.horizontal} ${\n          relative ? '' : css.absolute\n        }`}\n      />\n    </>\n  );\n};\nSeparator.propTypes = {\n  vertical: PropTypes.bool,\n  relative: PropTypes.bool,\n};\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '78f2b6656e3343e055b38455360ff324';\n\nconst params = new URLSearchParams({\n  // baseURL: 'https://api.themoviedb.org',\n  api_key: API_KEY,\n  page: 1,\n  include_adult: false,\n  language: 'en-US',\n});\naxios.defaults.params = params;\nconst axiosIns = axios.create({ baseURL, params });\n\n// `${baseURL}/3/trending/movie/day?api_key=${API_KEY}`\nexport const fetchTrending = async () => {\n  const { data } = await axiosIns.get(`trending/movie/day`);\n  return data;\n};\n\n// `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\nexport const fetchMovieByName = async query => {\n  const { data } = await axiosIns.get(`search/movie?query=${query}`);\n  return data;\n};\n\n// `${baseURL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\nexport const fetchMovieById = async movieId => {\n  const { data } = await axiosIns.get(`movie/${movieId}`);\n  return data;\n};\n\n// `${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axiosIns.get(`movie/${movieId}/credits`);\n  return data;\n};\n// `${baseURL}/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axiosIns.get(`movie/${movieId}}/reviews`);\n  return data;\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Article","title","content","id","className","css","replaceAll","toLowerCase","ArticleList","movieId","useParams","useState","list","setList","useEffect","getArticles","fetchMovieReviews","results","console","log","Separator","length","map","art","author","nanoid","vertical","relative","params","URLSearchParams","api_key","page","include_adult","language","axios","axiosIns","baseURL","fetchTrending","get","data","fetchMovieByName","query","fetchMovieById","fetchMovieCast","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}